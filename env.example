# GSAST Environment Configuration
# Copy this file to .env and fill in your actual values

# Required: GitHub Personal Access Token
# Create at: https://github.com/settings/tokens
# Permissions: repo, read:org (for accessing repositories)
GITHUB_API_TOKEN=ghp_your_github_token_here

# Required: GitLab Configuration
# For GitLab.com, use: https://gitlab.com
# For self-hosted GitLab, use your instance URL
GITLAB_URL=https://gitlab.com
# Create token at: GitLab Settings > Access Tokens > Add a personal access token
# Permissions: read_api, read_repository
GITLAB_API_TOKEN=glpat-your_gitlab_token_here

# Required: API Secret Key for authentication
# Generate a secure random string, e.g.: openssl rand -base64 32
API_SECRET_KEY=your-secure-random-secret-key-here

# Optional: Flask environment (development or production)
FLASK_ENV=development

# Optional: Redis URL (uses internal Redis if not specified)
# REDIS_URL=redis://:password@external-redis-host:6379

# Optional: Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Optional: SSL Configuration for corporate environments
# Set to true to disable SSL verification (not recommended for production)
# GITHUB_DISABLE_SSL_VERIFY=false
# Path to corporate CA bundle
# SSL_CERT_FILE=/path/to/corporate-ca-bundle.crt
# REQUESTS_CA_BUNDLE=/path/to/corporate-ca-bundle.crt

# Optional: Resource limits for scanning
# Maximum size of repositories to scan (in MB)
MAX_REPO_SIZE_MB=500
# Maximum number of concurrent scans
MAX_CONCURRENT_SCANS=5
